/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}


.txt-truncate {
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}


.txt-break {
  word-break: break-all;
  word-break: break-word;
  word-wrap: break-word;
}

* {
  box-sizing: border-box;
}

html {
  font-size: 16px;
}

body {
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 100%;
  line-height: 1.6;
  color: #333;
}

a {
  color: #3476af;
}

a:hover, a:focus {
  color: #285b88;
}

input[type="color"],
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"],
textarea {
  border: 1px solid #ccc;
  padding: 6px;
  border-radius: 3px;
}

table {
  max-width: 100%;
  background-color: transparent;
  border-collapse: collapse;
  border-spacing: 0;
}

img,
object,
embed {
  max-width: 100%;
}

.primary-headline, .secondary-headline {
  margin-top: 0;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  line-height: 1.2;
}

.dev {
  background-color: #fee;
  color: #900;
  font-weight: bold;
  padding: 0.25em;
}

.txt-left {
  text-align: left;
}

.txt-right {
  text-align: right;
}

.txt-center {
  text-align: center;
}

.txt-justify {
  text-align: justify;
}

.ptn, .pvn, .pan {
  padding-top: 0 !important;
}

.pts, .pvs, .pas {
  padding-top: 12.8px !important;
}

.ptm, .pvm, .pam {
  padding-top: 25.6px !important;
}

.ptl, .pvl, .pal {
  padding-top: 51.2px !important;
}

.prn, .phn, .pan {
  padding-right: 0 !important;
}

.prs, .phs, .pas {
  padding-right: 12.8px !important;
}

.prm, .phm, .pam {
  padding-right: 25.6px !important;
}

.prl, .phl, .pal {
  padding-right: 51.2px !important;
}

.pbn, .pvn, .pan {
  padding-bottom: 0 !important;
}

.pbs, .pvs, .pas {
  padding-bottom: 12.8px !important;
}

.pbm, .pvm, .pam {
  padding-bottom: 25.6px !important;
}

.pbl, .pvl, .pal {
  padding-bottom: 51.2px !important;
}

.pln, .phn, .pan {
  padding-left: 0 !important;
}

.pls, .phs, .pas {
  padding-left: 12.8px !important;
}

.plm, .phm, .pam {
  padding-left: 25.6px !important;
}

.pll, .phl, .pal {
  padding-left: 51.2px !important;
}

.mtn, .mvn, .man {
  margin-top: 0 !important;
}

.mts, .mvs, .mas {
  margin-top: 12.8px !important;
}

.mtm, .mvm, .mam {
  margin-top: 25.6px !important;
}

.mtl, .mvl, .mal {
  margin-top: 51.2px !important;
}

.mrn, .mhn, .man {
  margin-right: 0 !important;
}

.mrs, .mhs, .mas {
  margin-right: 12.8px !important;
}

.mrm, .mhm, .mam {
  margin-right: 25.6px !important;
}

.mrl, .mhl, .mal {
  margin-right: 51.2px !important;
}

.mbn, .mvn, .man {
  margin-bottom: 0 !important;
}

.mbs, .mvs, .mas {
  margin-bottom: 12.8px !important;
}

.mbm, .mvm, .mam {
  margin-bottom: 25.6px !important;
}

.mbl, .mvl, .mal {
  margin-bottom: 51.2px !important;
}

.mln, .mhn, .man {
  margin-left: 0 !important;
}

.mls, .mhs, .mas {
  margin-left: 12.8px !important;
}

.mlm, .mhm, .mam {
  margin-left: 25.6px !important;
}

.mll, .mhl, .mal {
  margin-left: 51.2px !important;
}

.l-container {
  margin: 0 auto;
  max-width: 60em;
  width: 90%;
  position: relative;
}

.l-section {
  margin-bottom: 25.6px;
}

.l-left {
  float: left;
}

.l-right {
  float: right;
}

.row::after {
  clear: both;
  content: "";
  display: table;
}

@media screen and (min-width: 43.75em) {
  .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12 {
    float: left;
    margin-left: 2.12766%;
  }
  .col-1:first-child, .col-2:first-child, .col-3:first-child, .col-4:first-child, .col-5:first-child, .col-6:first-child, .col-7:first-child, .col-8:first-child, .col-9:first-child, .col-10:first-child, .col-11:first-child, .col-12:first-child {
    margin-left: 0;
  }
  .col-centered.col-1, .col-centered.col-2, .col-centered.col-3, .col-centered.col-4, .col-centered.col-5, .col-centered.col-6, .col-centered.col-7, .col-centered.col-8, .col-centered.col-9, .col-centered.col-10, .col-centered.col-11, .col-centered.col-12 {
    float: none;
    margin: 0 auto;
  }
  .col-centered.col-1:first-child, .col-centered.col-2:first-child, .col-centered.col-3:first-child, .col-centered.col-4:first-child, .col-centered.col-5:first-child, .col-centered.col-6:first-child, .col-centered.col-7:first-child, .col-centered.col-8:first-child, .col-centered.col-9:first-child, .col-centered.col-10:first-child, .col-centered.col-11:first-child, .col-centered.col-12:first-child {
    margin-left: auto;
  }
}

@media screen and (min-width: 43.75em) {
  .col-1 {
    width: 6.38298%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-2 {
    width: 14.89362%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-3 {
    width: 23.40426%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-4 {
    width: 31.91489%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-5 {
    width: 40.42553%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-6 {
    width: 48.93617%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-7 {
    width: 57.44681%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-8 {
    width: 65.95745%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-9 {
    width: 74.46809%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-10 {
    width: 82.97872%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-11 {
    width: 91.48936%;
  }
}

@media screen and (min-width: 43.75em) {
  .col-12 {
    width: 100%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-1 {
    margin-left: 10.6383%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-1:first-child {
    margin-left: 8.51064%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-2 {
    margin-left: 19.14894%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-2:first-child {
    margin-left: 17.02128%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-3 {
    margin-left: 27.65957%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-3:first-child {
    margin-left: 25.53191%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-4 {
    margin-left: 36.17021%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-4:first-child {
    margin-left: 34.04255%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-5 {
    margin-left: 44.68085%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-5:first-child {
    margin-left: 42.55319%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-6 {
    margin-left: 53.19149%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-6:first-child {
    margin-left: 51.06383%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-7 {
    margin-left: 61.70213%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-7:first-child {
    margin-left: 59.57447%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-8 {
    margin-left: 70.21277%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-8:first-child {
    margin-left: 68.08511%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-9 {
    margin-left: 78.7234%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-9:first-child {
    margin-left: 76.59574%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-10 {
    margin-left: 87.23404%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-10:first-child {
    margin-left: 85.10638%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-11 {
    margin-left: 95.74468%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-11:first-child {
    margin-left: 93.61702%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-12 {
    margin-left: 104.25532%;
  }
}

@media screen and (min-width: 43.75em) {
  .push-12:first-child {
    margin-left: 102.12766%;
  }
}

.block {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.block__media, .block__content {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media screen and (min-width: 31.25em) {
  .block__media, .block__content {
    width: 50%;
  }
}

.block__content {
  background: #666;
  color: #fff;
  padding: 51.2px;
}

.block--family .block__media {
  background: url(../images/group-sunrise.jpg) no-repeat center center;
  background-size: cover;
}

.no-flexbox .block {
  display: table;
}

.no-flexbox .block__media, .no-flexbox .block__content {
  display: table-cell;
}

.logo {
  text-align: center;
}

.logo img {
  width: 200px;
  max-width: 200px;
  padding: 10px 0;
}

.button {
  display: inline-block;
  position: relative;
  margin: 0;
  padding: 8px 12px;
  cursor: pointer;
  line-height: normal;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  color: #333;
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 3px;
  -webkit-appearance: none;
}

.button:hover, .button:focus {
  text-decoration: none;
  color: #333;
  background-color: #e6e6e6;
}

.button:disabled, .button.is-disabled {
  cursor: default;
}

.button--full {
  display: block;
  width: 100%;
}

.button--small {
  font-size: 0.625em;
  padding: 4px 6px;
  text-transform: uppercase;
}

.button-pseudo {
  display: inline-block;
  padding: 8px 0;
  line-height: normal;
  vertical-align: middle;
  background: transparent;
  border: 0;
}

.button + .button-pseudo {
  margin-left: 25.6px;
}

.embed {
  position: relative;
  padding: 0;
  height: 0;
  overflow: hidden;
}

.embed__item,
.embed iframe,
.embed object,
.embed embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.embed--16by9 {
  padding-bottom: 56.25%;
}

.embed--4by3 {
  padding-bottom: 75%;
}

.form-horizontal input[type="color"],
.form-horizontal input[type="date"],
.form-horizontal input[type="datetime"],
.form-horizontal input[type="datetime-local"],
.form-horizontal input[type="email"],
.form-horizontal input[type="month"],
.form-horizontal input[type="number"],
.form-horizontal input[type="password"],
.form-horizontal input[type="search"],
.form-horizontal input[type="tel"],
.form-horizontal input[type="text"],
.form-horizontal input[type="time"],
.form-horizontal input[type="url"],
.form-horizontal input[type="week"],
.form-horizontal textarea,
.form-horizontal select {
  margin-right: 12.8px;
}

.form-vertical label {
  display: block;
  margin-bottom: 0.3125em;
}

.form-vertical input[type="color"],
.form-vertical input[type="date"],
.form-vertical input[type="datetime"],
.form-vertical input[type="datetime-local"],
.form-vertical input[type="email"],
.form-vertical input[type="month"],
.form-vertical input[type="number"],
.form-vertical input[type="password"],
.form-vertical input[type="search"],
.form-vertical input[type="tel"],
.form-vertical input[type="text"],
.form-vertical input[type="time"],
.form-vertical input[type="url"],
.form-vertical input[type="week"],
.form-vertical textarea,
.form-vertical select {
  display: block;
  margin-bottom: 25.6px;
}

.form-pair__group {
  margin-bottom: 25.6px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.form-pair label {
  margin-bottom: 0.3125em;
  -webkit-flex: 0 0 7.5em;
  -ms-flex: 0 0 7.5em;
  flex: 0 0 7.5em;
  margin-right: 0.625em;
}

.form-pair input {
  -webkit-flex: 1 1 12em;
  -ms-flex: 1 1 12em;
  flex: 1 1 12em;
}

.form-field {
  margin-bottom: 25.6px;
}

.input-checkbox,
.input-radio {
  padding-left: 25.6px;
}

.input-checkbox input[type="checkbox"],
.input-checkbox input[type="radio"],
.input-radio input[type="checkbox"],
.input-radio input[type="radio"] {
  float: left;
  margin: 5px 0 0 -25.6px;
}

.list-plain {
  margin-top: 0;
  padding-left: 0;
  list-style: none;
}

.list-horizontal {
  margin-top: 0;
  padding-left: 0;
}

.list-horizontal > li {
  display: inline-block;
  margin-right: 25.6px;
}

.list-horizontal > li:last-child {
  margin-right: 0;
}

.mast {
  width: 100%;
  background-color: #bdb69c;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
}

.mast > .l-container {
  padding: 100px 0;
}

.mast__intro_headline {
  color: rgba(255, 255, 255, 0.7);
  text-align: center;
  font-size: 1.5625em;
}

.mast__headline {
  color: #fff;
  margin-top: 0;
  text-align: center;
  font-size: 3.125em;
}

.media {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.media__obj {
  margin-right: 12.8px;
}

.media__obj--rev {
  -webkit-order: 1;
  -ms-flex-order: 1;
  order: 1;
  margin-right: 0;
  margin-left: 12.8px;
}

.media__body {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin-bottom: 0;
}

.media__heading {
  margin: 0 0 5px;
}

.media--center {
  -webkit-align-items: center;
  -ms-flex-align: center;
  -ms-grid-row-align: center;
  align-items: center;
}

.no-flexbox .media {
  overflow: hidden;
}

.no-flexbox .media__body {
  overflow: hidden;
}

.no-flexbox .media__obj {
  float: left;
  margin-right: 12.8px;
  display: block;
}

.no-flexbox .media__obj--rev {
  float: right;
  margin-right: 0;
  margin-left: 12.8px;
}

.no-flexbox .media__heading {
  margin: 0 0 5px 0;
}

.navigation--main {
  background: #717D8C;
  color: #fff;
  padding: 4px;
}

.navigation--main ul {
  margin: 0;
  padding: 0;
  list-style: none;
  font-size: 0.75em;
}

.navigation--main ul > li {
  display: inline-block;
  margin-right: 25.6px;
}

.navigation--main ul > li:last-child {
  margin-right: 0;
}

.navigation--main a {
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
}

.notification {
  padding: 25.6px;
  margin-bottom: 25.6px;
  border: 1px solid;
  border-radius: 4px;
}

.notification__title {
  margin: 0 0 12.8px 0;
  font-size: 1.25em;
}

.notification--alert {
  color: #a94442;
  background-color: #f2e3e3;
  border-color: #873635;
}

.notification--warning {
  color: #b29115;
  background-color: #f3efdc;
  border-color: #8e7411;
}

.notification--success {
  color: #3c763d;
  background-color: #e2eae2;
  border-color: #305e31;
}

.notification--notice {
  color: #31708f;
  background-color: #e0eaee;
  border-color: #275a72;
}

.overlay:before {
  background-color: rgba(0, 0, 0, 0.2);
}

.overlay-blue:before {
  background-color: rgba(115, 127, 191, 0.8);
}

.overlay, .overlay-blue {
  position: relative;
}

.overlay:before, .overlay-blue:before {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 0;
}

.overlay *, .overlay-blue * {
  position: relative;
}

.product {
  text-align: center;
  max-width: 180px;
  width: 65%;
  margin: auto;
  padding-bottom: 35px;
}

.product__img {
  height: 120px;
  margin-bottom: 12.8px;
}

.product__title {
  font-size: 0.875em;
  font-weight: normal;
  margin: 0;
  min-height: 50px;
}

.quickthought {
  padding: 0.625em;
  position: relative;
  background-image: url(/images/sunrise.jpg);
  background-size: cover;
  background-position: 50% 50%;
  min-height: 200px;
}

.quickthought--large {
  border: 0;
  font-size: 1.5em;
  text-align: center;
  font-style: italic;
  padding: 3.33333em 0;
}

.quickthought__text {
  padding: 0;
  font-size: 32px;
  display: block;
  text-align: center;
  color: #fff;
}

.quickthought__related {
  font-size: 0.6875em;
  text-transform: uppercase;
  padding-top: 0.625em;
}

.quickthought__related a {
  padding-right: 0.625em;
}

.quickthought__share {
  position: absolute;
  bottom: 10px;
  right: 10px;
}

.table {
  margin-bottom: 25.6px;
  width: 100%;
}

.table thead {
  border-bottom: 1px solid #ccc;
}

.table tbody tr {
  border-bottom: 1px solid #ccc;
}

.table th,
.table td {
  padding: 0.625em;
}

.table th {
  text-align: left;
  font-weight: bold;
}

.table--striped tbody tr:nth-child(odd) {
  background-color: #f3f3f3;
}

.table--hover tbody tr:hover {
  background-color: #eee;
}

.table-wrapper {
  position: relative;
  overflow: hidden;
  margin-bottom: 12.8px;
  white-space: nowrap;
  -webkit-overflow-scrolling: touch;
}

.scrollable {
  overflow: auto;
  overflow-y: hidden;
}

.tile-container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin-left: -12.8px;
}

.tile__item {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 12.8px;
}

@media screen and (min-width: 31.25em) {
  .tile__item {
    padding-left: 12.8px;
    width: 50%;
  }
}

@media screen and (min-width: 43.75em) {
  .tile-container--three .tile__item {
    width: 33.33333%;
  }
}

@media screen and (min-width: 43.75em) {
  .tile-container--four .tile__item {
    width: 33.33333%;
  }
}

@media screen and (min-width: 56.25em) {
  .tile-container--four .tile__item {
    width: 25%;
  }
}

.no-flexbox .tile-container::after {
  clear: both;
  content: "";
  display: table;
}

.no-flexbox .tile__item {
  float: left;
  margin-bottom: 12.8px;
}

@media screen and (min-width: 31.25em) {
  .no-flexbox .tile__item {
    margin-left: 2%;
    width: 49%;
  }
  .no-flexbox .tile__item:nth-child(2n+1) {
    clear: left;
    margin-left: 0;
  }
}

@media screen and (min-width: 43.75em) {
  .no-flexbox .tile-container--three .tile__item {
    margin-left: 2%;
    width: 32%;
  }
  .no-flexbox .tile-container--three .tile__item:nth-child(2n+1) {
    clear: none;
    margin-left: 2%;
  }
  .no-flexbox .tile-container--three .tile__item:nth-child(3n+1) {
    clear: left;
    margin-left: 0;
  }
}

@media screen and (min-width: 43.75em) {
  .no-flexbox .tile-container--four .tile__item {
    margin-left: 2%;
    width: 32%;
  }
  .no-flexbox .tile-container--four .tile__item:nth-child(2n+1) {
    clear: none;
    margin-left: 2%;
  }
  .no-flexbox .tile-container--four .tile__item:nth-child(3n+1) {
    clear: left;
    margin-left: 0;
  }
}

@media screen and (min-width: 56.25em) {
  .no-flexbox .tile-container--four .tile__item {
    margin-left: 2%;
    width: 23.5%;
  }
  .no-flexbox .tile-container--four .tile__item:nth-child(3n+1) {
    clear: none;
    margin-left: 2%;
  }
  .no-flexbox .tile-container--four .tile__item:nth-child(4n+1) {
    clear: left;
    margin-left: 0;
  }
}

.is-hidden {
  display: none !important;
  visibility: hidden !important;
}

.is-hidden-visually {
  position: absolute !important;
  padding: 0;
  overflow: hidden;
  width: 1px;
  height: 1px;
  clip: rect(1px, 1px, 1px, 1px);
  border: 0;
}

.is-invisible {
  visibility: hidden;
}

.is-visible {
  visibility: visible;
}

/*# sourceMappingURL=data:application/json;base64, */
